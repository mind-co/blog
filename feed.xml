<?xml version="1.0" encoding="UTF-8"?>

<rss version="2.0"
  xmlns:content="http://purl.org/rss/1.0/modules/content/"
  xmlns:dc="http://purl.org/dc/elements/1.1/"
  xmlns:media="http://search.yahoo.com/mrss/"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:georss="http://www.georss.org/georss">

  <channel>
    <title>
      <![CDATA[  The Comind Blog  ]]>
    </title>
    <link> https://blog.comind.me/ </link>
    <description>
      <![CDATA[  trying to think good thoughts  ]]>
    </description>
    <atom:link
      href="https://blog.comind.me/feed.xml"
      rel="self"
      type="application/rss+xml" />


<item>
  <title>
    <![CDATA[  devlog 2024-05-03  ]]>
  </title>
  <link> https://blog.comind.me/devlogs/2024-05-03/index.html </link>
  <guid> https://blog.comind.me/devlogs/2024-05-03/index.html </guid>
  <description>
    <![CDATA[  some stuff about melds and how they work in comind  ]]>
  </description>  
  
  <content:encoded>
    <![CDATA[  <h1 id="devlog_2024-05-03">devlog 2024-05-03</h1>
<ul>
<li><p>Fixed some bugs on the front end, where the websocket container was closing prematurely. This ended up being an issue with what I was putting into the <a href="https://react.dev/reference/react/useEffect#examples-dependencies">dependency array</a>, which determines when something is to be rendered. I had placed an array of thoughts in the dependency array, and the websocket modifies those thoughts, which causes the component to rerender. This is kind of an issue, because I basically just duct-taped it together. The full Next build will fail because of this, currently, but dev mode works fine &#40;for now&#41;.</p>
<ul>
<li><p>The front end is still not available, largely because the release builds won&#39;t work without me addressing a litany of stupid shit I&#39;ve done.</p>
</li>
</ul>
</li>
<li><p>Updated the meld view. The meld view lists all melds that you have or are a part of. You can now make a new one with a title and a description, refresh the list, and click into the meld &#40;&quot;jump in&quot;&#41; to see the thoughts.</p>
<ul>
<li><p>Unfortunately the &quot;jump in&quot; button does not let you jump in, maybe more like &quot;get a 404&quot;. Basically, I produce slugs &#40;<code>/meld/&lt;slug&gt;</code>&#41; for melds. The backend assigns slugs asynchronously, so the front end has no idea where the button is supposed to point to, i.e. <code>meld/null</code>.</p>
</li>
</ul>
</li>
</ul>
<p><img src="https://blog.comind.me/assets/2024-05-03/a.png" alt="A display of the meld view" /></p>
<ul>
<li><p>The frontend framework I chose, <a href="https://mantine.dev/">Matine</a>, is extremely good. There&#39;s a lot fewer degrees of freedom than in <a href="https://tailwindcss.com/">Tailwind</a>, my previous framework. It has really helped me speed through creating bits and pieces without this crazy-ass web of <code>div</code>s and <code>className</code>s. It is, however, not <em>quite</em> what I want stylistically, but I&#39;ve decided I just need to get some shit out the door and I don&#39;t really care too much about how it looks.</p>
<ul>
<li><p>There will be a frontend redesign at some point to accomodate Android &#43; iOS, so this will be a natural time to revisit the entire look and feel of the app.</p>
</li>
</ul>
</li>
<li><p>Spent a little bit of time trying to set up Neo4j, the graph database I am considering migrating to. Friend of the comind <a href="https://twitter.com/MasonRHayes">Mason</a> found a Neo4j <a href="https://gitlab.com/plantingspace/neo4jbase.jl">connector package</a> written by Julia friendos at <a href="https://planting.space/">PlantingSpace</a>.</p>
<ul>
<li><p>Thanks Mason for tracking that down&#33;</p>
</li>
<li><p>PlantingSpace is a cool-ass company.</p>
</li>
<li><p>Got the docker container working. </p>
</li>
</ul>
</li>
<li><p>Played with some visuals. One of my favorite things about comind is that it is kind of an art project, so intermittently I let myself be distracted and just kind of make things I think are pretty. In this case, I made the loading screen, which has this kind of chill, plain, adult-swim-y vibe to it. My goal has always been to try to capture that simple Adult Swim vibe and I&#39;m not sure if this quite does it, but I like it for now.</p>
</li>
</ul>
<p><img src="https://blog.comind.me/assets/2024-05-03/b.png" alt="A comind is thinking page" /></p>
<p>To bed now.</p>
<p>– Cameron Pfiffer</p>
 ]]>
  </content:encoded>
    
  <pubDate>Fri, 03 May 2024 00:00:00 +0000</pubDate>  
  
  
  <atom:author>
    <atom:name>mindco</atom:name>
  </atom:author>
        
</item>

<item>
  <title>
    <![CDATA[  devlog 2024-04-29, web stuff &amp; melds  ]]>
  </title>
  <link> https://blog.comind.me/devlogs/2024-04-29/index.html </link>
  <guid> https://blog.comind.me/devlogs/2024-04-29/index.html </guid>
  <description>
    <![CDATA[  some stuff about melds and how they work in comind  ]]>
  </description>  
  
  <content:encoded>
    <![CDATA[  <h1 id="devlog_2024-04-29_web_stuff_melds">devlog 2024-04-29, web stuff &amp; melds</h1>
<p>More today on the ongoing construction of Welder.jl, &#123;comind&#125;&#39;s websocket server for handling melds.  Melds are something like forums, group chats, or twitter threads – you and/or a group of people can chat about a topic in real time. Each of you will be shown suggested thoughts any time a new thought is added to the meld. </p>
<p><strong>Suggestions</strong> are thoughts that </p>
<ul>
<li><p>you or someone else has written before</p>
</li>
<li><p>previously linked to the previous note</p>
</li>
<li><p>language model generated commentary like summaries or direct answers to questions</p>
</li>
<li><p>suggestions to view other melds</p>
</li>
<li><p>offers or tips to use a particular feature</p>
</li>
</ul>
<p>The idea here is that you type your way around comind, sometimes just thinking to yourself,  in public melds, small group melds, business melds, etc. When you think, you either add something to a stream of conciousness yourself, or you pull in a suggestion. </p>
<p>While you type your way along, you can also choose to be &quot;pulled&quot; around by accepting suggestions. These are the main feature of comind. You should think of suggestions as thoughts that change, interpret, or assist you in whatever you are thinking about. </p>
<p>For example, if you are in a meld for a research group, you might be shown suggestions like</p>
<ul>
<li><p>This paper seems to be related to what you and your group are discussing, and it may be helpful to note X and Y.</p>
</li>
<li><p>A reminder that you seem to have written something related elsewhere, like in an email or other meld.</p>
</li>
<li><p>A link to a meld where you and a friend were discussing a paper. This shares the dialog from a meld with the meld you add it to.</p>
</li>
<li><p>Any of the &#123;comind&#125; language models. </p>
<ul>
<li><p>&#123;co&#125; &#40;the &quot;main&quot; language model&#41; has access to your complete knowledge graph to the accept you permit it, and will act as something like a personal search and query engine in response to thoughts that resemble queries.</p>
</li>
<li><p>&#123;science&#125;, the comind for the concept &quot;science&quot;, may provide an overview of the current discussion of your paper in all other public melds.</p>
</li>
<li><p>&#123;void&#125; might just say &quot;you should toss that to the void. i&#39;d love to read it.&quot; You could probably turn these off if you wanted.</p>
</li>
</ul>
</li>
</ul>
<p>All this is hard to do, technically. I&#39;ve discussed this before but it bears repeating. I&#39;m spending a <em>lot</em> of time on Welder.jl, in part because it&#39;s one of the more important pieces of &#123;comind&#125;&#39;s infrastructure.</p>
<p>Some accomplishments:</p>
<ul>
<li><p>Thoughts sent to the websocket server are now relayed to the main server, so they are persistent now.</p>
</li>
<li><p>Each new thought in a meld is linked to the one before it, this now works client -&gt; welder -&gt; server -&gt; database.</p>
</li>
<li><p>The root weld &#40;no other meld&#41; now works, and you can also call up a meld by its slug. <code>/meld/the-have</code> is my testing example.</p>
</li>
<li><p>Produced a simple, interactive client for testing a meld.</p>
</li>
<li><p>Supported a simple suggestion relay to the user.</p>
</li>
</ul>
<p>Basically, I can talk to myself now, real time, and the server is now sending me &#40;very dumb&#41; suggestions about what I should look at next. </p>
<p>I also have a working pseudo-REPL terminal UI to use when I do meld work. Welder.jl is a much higher quality project than my usual fare, and I&#39;m really happy with both the test scaffolding and the project thusfar.</p>
<p>Here&#39;s an example of the suggestions I got, sourced only by semantic search:</p>
<pre><code class="language-julia">cameron, 2024-02-21T15:55:47.846
╭──────────────────────────────────────────────────────────────────────────────────────╮
│  And look at that&#33; It works now. It&#39;s worth talking about why I think there should   │
│   be thought titles on here. In some sense this is kind of a tweet-place, where      │
│  users write lots of short-form stuff.                                               │
│                                                                                      │
│  1. We don&#39;t _usually_ have titles for this kinds of things, because the posts       │
│  are so short. On Comind, I don&#39;t actually restrict length to anything &#40;though       │
│  I may at some point for RAG purposes&#41;, so it kind of helps to be able to get        │
│  a rough description of what&#39;s in the thought for those longer documents.            │
│  2. It&#39;s goofy. I like having kinda dumb default titles. I&#39;m always looking for      │
│  ways to make comind an interesting place for play and silly LLM applications,       │
│  and titles seemed relatively obvious &#40;ChatGPT, for example, does this quite         │
│  well&#41;.                                                                              │
│  3. It helps you find stuff. Comind is fundamentally a notetaking and knowledge      │
│  graph tool, and so we want to provide tools that make it easy to determine what     │
│  is inside a given thought.                                                          │
╰──────────────────────────────────────────────────────────────────────────────────────╯cameron, 2024-02-12T18:41:32.651
╭──────────────────────────────────────────────────────────────────────────────────────╮
│  &#40;side note for #comind-ui, the tabula rasa baybee placeholder should say &quot;add       │
│  more thoughts&quot; when the top of mind is populated&#41;                                   │
╰──────────────────────────────────────────────────────────────────────────────────────╯test, 2024-03-27T06:13:00.526
╭──────────────────────────────────────────────────────────────────────────────────────╮
│  This is a test thought, from a testy fella                                          │
╰──────────────────────────────────────────────────────────────────────────────────────╯</code></pre>
<p>Good fuckin&#39; day in my opinion.</p>
<p>– Cameron</p>
 ]]>
  </content:encoded>
    
  <pubDate>Mon, 29 Apr 2024 00:00:00 +0000</pubDate>  
  
  
  <atom:author>
    <atom:name>mindco</atom:name>
  </atom:author>
        
</item>
</channel></rss>